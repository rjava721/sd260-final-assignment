{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rjh28\\\\Desktop\\\\school\\\\sd260\\\\final-assignment\\\\final-project\\\\src\\\\App.js\";\nimport React, { Component } from 'react'; //import Header from './Header';\n\nimport StatusForm from './StatusForm'; //import Timeline from './Timeline';\n\nimport Post from './Post'; // import Comment from './Comment';\n\nimport './App.css'; // update your data\n// you are rendering your stuff through setState which updates your data\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateCurrentUser = event => {\n      {\n        /* inside of header, on change , when the name is selected, grab it with event.name and change state to it */\n      }\n      let userData = this.state.userData;\n      let currentUserTempArray = this.state.currentUser;\n      let selectedUser = event.target.value; //console.log('value of this.state.currentUser.name before this.setState' + this.state.currentUser.name);\n      //console.log('the select tag has updated, called props.onChange which called updateCurrentUser')\n      // now we update state.currentUser with setState\n\n      userData.map(user => {\n        if (selectedUser === user.userName) {\n          currentUserTempArray.name = selectedUser;\n          currentUserTempArray.id = user.id;\n          currentUserTempArray.avatarUrl = user.avatarUrl;\n          this.setState({\n            currentUser: currentUserTempArray\n          });\n          console.log(this.state.currentUser);\n        }\n      });\n    };\n\n    this.handleFormSubmit = event => {\n      let userPosts = this.state.userPosts;\n      let formValue = this.state.formValue; // prevent the page reload\n\n      console.log('form submit function called');\n      event.preventDefault(); // take the state array and store the formtextcontnet inside of it.\n\n      userPosts.push(formValue);\n      console.log(userPosts); // empty the form input box\n\n      this.setState({\n        formValue: ''\n      }); // then map through the array and then create a post inside the render function\n      // the function gets called inside of the render\n    };\n\n    this.createPost = () => {\n      return this.state.userPosts.map(post => {\n        return React.createElement(Post, {\n          currentUser: this.state.currentUser,\n          formContent: post,\n          userImage: this.state.currentUser.avatarUrl,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        });\n      });\n    };\n\n    this.updateState = event => {\n      // update the state\n      // push the texcontent inside of a state array that is meant to store all posts\n      // and clear the input box\n      // map through the array\n      // create a new post for each array element\n      this.setState({\n        formValue: event.target.value\n      }); // this.setState({ formValue: ''});\n    };\n\n    this.state = {\n      currentUser: {\n        name: '',\n        id: 5,\n        avatarUrl: ''\n      },\n      // userData: ['jawad', 'Skywalker'],\n      userData: [{\n        userName: 'jawad',\n        id: 0,\n        avatarUrl: 'https://lh6.googleusercontent.com/proxy/U4Xg7pjLdOi-k39llZrQl4Rry7JDFN3Z1lwuUkXAh_SNbJXwnutlgqGb2jr9nSMttrJKYz-02nG-fQmXW8KB1rwbiA'\n      }, {\n        userName: 'Skywalker',\n        id: 1,\n        avatarUrl: 'https://pdpcom.scdn1.secure.raxcdn.com/media/catalog/product/cache/1/image/85e4522595efc69f496374d01ef2bf13/f/r/front_20-_20on_1_1.png'\n      }],\n      userPosts: [],\n      formValue: ''\n    };\n  } // Header================================\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"main-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Header, {\n      currentUser: this.state.currentUser,\n      userData: this.state.userData,\n      onChange: this.updateCurrentUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(StatusForm, {\n      currentUser: this.state.currentUser,\n      handleFormSubmit: this.handleFormSubmit,\n      updateState: this.updateState,\n      formValue: this.state.formValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), this.createPost());\n  }\n\n}\n\nlet Header = props => {\n  let alluserData = props.userData;\n  return React.createElement(\"div\", {\n    className: \"header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"Social News Feed\"), React.createElement(\"select\", {\n    className: \"user-select-list\",\n    onChange: props.onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, alluserData.map(user => {\n    return React.createElement(\"option\", {\n      value: user.userName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, user.userName);\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/rjh28/Desktop/school/sd260/final-assignment/final-project/src/App.js"],"names":["React","Component","StatusForm","Post","App","constructor","props","updateCurrentUser","event","userData","state","currentUserTempArray","currentUser","selectedUser","target","value","map","user","userName","name","id","avatarUrl","setState","console","log","handleFormSubmit","userPosts","formValue","preventDefault","push","createPost","post","updateState","render","Header","alluserData","onChange"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n//import Header from './Header';\nimport StatusForm from './StatusForm';\n//import Timeline from './Timeline';\nimport Post from './Post';\n\n// import Comment from './Comment';\nimport './App.css';\n\n// update your data\n// you are rendering your stuff through setState which updates your data\n\nclass App extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      currentUser: {\n        name: '',\n        id: 5,\n        avatarUrl: ''\n      },\n\n      // userData: ['jawad', 'Skywalker'],\n      userData: [\n        {\n          userName: 'jawad',\n          id: 0,\n          avatarUrl: 'https://lh6.googleusercontent.com/proxy/U4Xg7pjLdOi-k39llZrQl4Rry7JDFN3Z1lwuUkXAh_SNbJXwnutlgqGb2jr9nSMttrJKYz-02nG-fQmXW8KB1rwbiA'\n        },\n        {\n          userName: 'Skywalker',\n          id: 1,\n          avatarUrl: 'https://pdpcom.scdn1.secure.raxcdn.com/media/catalog/product/cache/1/image/85e4522595efc69f496374d01ef2bf13/f/r/front_20-_20on_1_1.png'\n        }\n      ],\n\n      userPosts: [],\n      formValue: '',\n    }\n  }\n\n  // Header================================\n\n  updateCurrentUser = (event) => {\n    {/* inside of header, on change , when the name is selected, grab it with event.name and change state to it */}\n    let userData = this.state.userData;\n    let currentUserTempArray = this.state.currentUser;\n    let selectedUser = event.target.value;\n\n    //console.log('value of this.state.currentUser.name before this.setState' + this.state.currentUser.name);\n\n    \n    //console.log('the select tag has updated, called props.onChange which called updateCurrentUser')\n\n    // now we update state.currentUser with setState\n    userData.map( user => {\n      if (selectedUser === user.userName) {\n        currentUserTempArray.name = selectedUser;\n        currentUserTempArray.id = user.id;\n        currentUserTempArray.avatarUrl = user.avatarUrl;\n\n        this.setState ({ currentUser : currentUserTempArray });\n        console.log(this.state.currentUser);\n      }\n    })\n  }\n\n  // StatusForm\n\n  handleFormSubmit = (event) => {\n    let userPosts = this.state.userPosts;\n    let formValue = this.state.formValue;\n\n    // prevent the page reload\n    console.log('form submit function called');\n    event.preventDefault();\n\n    // take the state array and store the formtextcontnet inside of it.\n    userPosts.push(formValue);\n    console.log(userPosts);\n\n    // empty the form input box\n    this.setState({ formValue : '' });\n\n    // then map through the array and then create a post inside the render function\n    // the function gets called inside of the render\n    \n  }\n\n  //call it renderPost\n  createPost = () => {\n    return (this.state.userPosts.map((post) => { return <Post currentUser={this.state.currentUser} formContent={post} userImage={this.state.currentUser.avatarUrl} /> }))\n  }\n\n  updateState = (event) => {\n    // update the state\n    // push the texcontent inside of a state array that is meant to store all posts\n    // and clear the input box\n    // map through the array\n    // create a new post for each array element\n    \n    this.setState({ formValue : event.target.value});\n    // this.setState({ formValue: ''});\n  }\n\n  render() {\n    \n    return (\n      <div className='main-container'>\n        <Header currentUser={this.state.currentUser} userData={this.state.userData} onChange={this.updateCurrentUser}/>\n        <StatusForm currentUser={this.state.currentUser} handleFormSubmit={this.handleFormSubmit} updateState={this.updateState} formValue={this.state.formValue} />\n        {this.createPost()}\n      </div>  \n    )\n  }\n\n}\n\nlet Header = (props) => {\n  let alluserData = props.userData;\n\n  return (\n    <div className='header'>\n      <h2>Social News Feed</h2>\n      <select  className='user-select-list' onChange={props.onChange}>\n        {alluserData.map(user => { return <option value={user.userName}>{user.userName}</option> })}\n      </select>\n    </div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}