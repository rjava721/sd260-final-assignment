{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rjh28\\\\Desktop\\\\school\\\\sd260\\\\final-assignment\\\\final-project\\\\src\\\\App.js\";\nimport React, { Component } from 'react'; //import Header from './Header';\n\nimport StatusForm from './StatusForm'; //import Timeline from './Timeline';\n\nimport Post from './Post'; // import Comment from './Comment';\n\nimport './App.css'; // update your data\n// you are rendering your stuff through setState which updates your data\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateCurrentUser = event => {\n      {\n        /* inside of header, on change , when the name is selected, grab it with event.name and change state to it */\n      }\n      let userData = this.state.userData;\n      let currentUserTempArray = this.state.currentUser;\n      let selectedUser = event.target.value; // now we update state.currentUser with setState\n\n      userData.map(user => {\n        if (selectedUser === user.userName) {\n          currentUserTempArray.name = selectedUser;\n          currentUserTempArray.id = user.id;\n          currentUserTempArray.avatarUrl = user.avatarUrl;\n          this.setState({\n            currentUser: currentUserTempArray\n          });\n          console.log(this.state.currentUser);\n        }\n      });\n    };\n\n    this.handleFormSubmit = event => {\n      // if the currentuser is 1 then push everything related to it in its own array\n      // else currentuser is 2 then push all posts to user2statearray\n      // then empty the box\n      let user1Posts = this.state.user1Posts;\n      let user2Posts = this.state.user2Posts;\n      let formValue = this.state.formValue;\n      let currentUser = this.state.currentUser; // prevent the page reload\n\n      console.log('form submit function called');\n      event.preventDefault(); // take the state array and store the formtextcontnet inside of it.\n\n      {\n        if (currentUser.name === 'jawad') {\n          user1Posts.push(formValue);\n          console.log('were dealing with user1 : ' + user1Posts);\n        } else {\n          user2Posts.push(formValue);\n          console.log('were dealing with user2 : ' + user2Posts);\n        }\n      } // empty the form input box\n\n      this.setState({\n        formValue: ''\n      }); // then map through the array and then create a post inside the render function\n      // the function gets called inside of the render\n    };\n\n    this.createPost = () => {\n      let user1Posts = this.state.user1Posts;\n      let user2Posts = this.state.user2Posts;\n      let currentUser = this.state.currentUser;\n\n      if (currentUser.name === 'jawad') {\n        return this.state.user1Posts.map(post => {\n          return React.createElement(Post, {\n            currentUser: this.state.currentUser,\n            formContent: post,\n            userImage: this.state.currentUser.avatarUrl,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 103\n            },\n            __self: this\n          });\n        });\n      } else {\n        return this.state.user2Posts.map(post => {\n          return React.createElement(Post, {\n            currentUser: this.state.currentUser,\n            formContent: post,\n            userImage: this.state.currentUser.avatarUrl,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 105\n            },\n            __self: this\n          });\n        });\n      }\n    };\n\n    this.updateState = event => {\n      this.setState({\n        formValue: event.target.value\n      });\n    };\n\n    this.state = {\n      currentUser: {\n        name: '',\n        id: 5,\n        avatarUrl: ''\n      },\n      // userData: ['jawad', 'Skywalker'],\n      userData: [{\n        userName: 'jawad',\n        id: 0,\n        avatarUrl: 'https://lh6.googleusercontent.com/proxy/U4Xg7pjLdOi-k39llZrQl4Rry7JDFN3Z1lwuUkXAh_SNbJXwnutlgqGb2jr9nSMttrJKYz-02nG-fQmXW8KB1rwbiA'\n      }, {\n        userName: 'Skywalker',\n        id: 1,\n        avatarUrl: 'https://pdpcom.scdn1.secure.raxcdn.com/media/catalog/product/cache/1/image/85e4522595efc69f496374d01ef2bf13/f/r/front_20-_20on_1_1.png'\n      }],\n      everyUserPosts: [],\n      user1Posts: [],\n      user2Posts: [],\n      formValue: ''\n    };\n  } // Header================================\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"main-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(Header, {\n      currentUser: this.state.currentUser,\n      userData: this.state.userData,\n      onChange: this.updateCurrentUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(StatusForm, {\n      currentUser: this.state.currentUser,\n      handleFormSubmit: this.handleFormSubmit,\n      updateState: this.updateState,\n      formValue: this.state.formValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), this.createPost());\n  } //render\n\n\n} //class\n\n\nlet Header = props => {\n  let alluserData = props.userData;\n  return React.createElement(\"div\", {\n    className: \"header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"Social News Feed\"), React.createElement(\"select\", {\n    className: \"user-select-list\",\n    onChange: props.onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, alluserData.map(user => {\n    return React.createElement(\"option\", {\n      value: user.userName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, user.userName);\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/rjh28/Desktop/school/sd260/final-assignment/final-project/src/App.js"],"names":["React","Component","StatusForm","Post","App","constructor","props","updateCurrentUser","event","userData","state","currentUserTempArray","currentUser","selectedUser","target","value","map","user","userName","name","id","avatarUrl","setState","console","log","handleFormSubmit","user1Posts","user2Posts","formValue","preventDefault","push","createPost","post","updateState","everyUserPosts","render","Header","alluserData","onChange"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n//import Header from './Header';\nimport StatusForm from './StatusForm';\n//import Timeline from './Timeline';\nimport Post from './Post';\n\n// import Comment from './Comment';\nimport './App.css';\n\n// update your data\n// you are rendering your stuff through setState which updates your data\n\nclass App extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      currentUser: {\n        name: '',\n        id: 5,\n        avatarUrl: ''\n      },\n      // userData: ['jawad', 'Skywalker'],\n      userData: [\n        {\n          userName: 'jawad',\n          id: 0,\n          avatarUrl: 'https://lh6.googleusercontent.com/proxy/U4Xg7pjLdOi-k39llZrQl4Rry7JDFN3Z1lwuUkXAh_SNbJXwnutlgqGb2jr9nSMttrJKYz-02nG-fQmXW8KB1rwbiA'\n        },\n        {\n          userName: 'Skywalker',\n          id: 1,\n          avatarUrl: 'https://pdpcom.scdn1.secure.raxcdn.com/media/catalog/product/cache/1/image/85e4522595efc69f496374d01ef2bf13/f/r/front_20-_20on_1_1.png'\n        }\n      ],\n      everyUserPosts: [],\n      user1Posts: [],\n      user2Posts: [],\n      formValue: '',\n    }\n  }\n\n  // Header================================\n\n  updateCurrentUser = (event) => {\n    {/* inside of header, on change , when the name is selected, grab it with event.name and change state to it */}\n    let userData = this.state.userData;\n    let currentUserTempArray = this.state.currentUser;\n    let selectedUser = event.target.value;\n\n    // now we update state.currentUser with setState\n    userData.map( user => {\n      if (selectedUser === user.userName) {\n        currentUserTempArray.name = selectedUser;\n        currentUserTempArray.id = user.id;\n        currentUserTempArray.avatarUrl = user.avatarUrl;\n\n        this.setState ({ currentUser : currentUserTempArray });\n        console.log(this.state.currentUser);\n      }\n    })\n  }\n\n  // StatusForm=================================\n\n  handleFormSubmit = (event) => {\n    // if the currentuser is 1 then push everything related to it in its own array\n    // else currentuser is 2 then push all posts to user2statearray\n    // then empty the box\n\n    let user1Posts = this.state.user1Posts;\n    let user2Posts = this.state.user2Posts;\n    let formValue = this.state.formValue;\n    let currentUser = this.state.currentUser;\n\n    // prevent the page reload\n    console.log('form submit function called');\n    event.preventDefault();\n\n    // take the state array and store the formtextcontnet inside of it.\n    {if (currentUser.name === 'jawad') {\n      user1Posts.push(formValue);\n      console.log('were dealing with user1 : ' + user1Posts)\n    } else {\n      user2Posts.push(formValue);\n      console.log('were dealing with user2 : ' + user2Posts);\n    }}\n\n    // empty the form input box\n    this.setState({ formValue : '' });\n\n    // then map through the array and then create a post inside the render function\n    // the function gets called inside of the render\n    \n  }\n\n  //call it renderPost\n  createPost = () => {\n    let user1Posts = this.state.user1Posts;\n    let user2Posts = this.state.user2Posts;\n    let currentUser = this.state.currentUser;\n\n    if(currentUser.name === 'jawad') {\n      return (this.state.user1Posts.map((post) => { return <Post currentUser={this.state.currentUser} formContent={post} userImage={this.state.currentUser.avatarUrl} /> }))\n    } else {\n      return (this.state.user2Posts.map((post) => { return <Post currentUser={this.state.currentUser} formContent={post} userImage={this.state.currentUser.avatarUrl} /> }))\n    }\n\n  }\n\n  updateState = (event) => {\n    this.setState({ formValue : event.target.value});\n  }\n\n  render() {\n    return (\n      <div className='main-container'>\n        <Header currentUser={this.state.currentUser} userData={this.state.userData} onChange={this.updateCurrentUser}/>\n\n        <StatusForm currentUser={this.state.currentUser} handleFormSubmit={this.handleFormSubmit} updateState={this.updateState} formValue={this.state.formValue} />\n\n        {this.createPost()}\n      </div>  \n    )\n  }//render\n\n}//class\n\nlet Header = (props) => {\n  let alluserData = props.userData;\n  return (\n    <div className='header'>\n      <h2>Social News Feed</h2>\n      <select className='user-select-list' onChange={props.onChange}>\n        {alluserData.map(user => { return <option value={user.userName}>{user.userName}</option> })}\n      </select>\n    </div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}