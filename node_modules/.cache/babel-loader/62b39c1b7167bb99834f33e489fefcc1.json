{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rjh28\\\\Desktop\\\\school\\\\sd260\\\\final-assignment\\\\final-project\\\\src\\\\App.js\";\nimport React, { Component } from 'react'; //import Header from './Header';\n\nimport StatusForm from './StatusForm'; //import Timeline from './Timeline';\n\nimport Post from './Post'; // import Comment from './Comment';\n\nimport './App.css'; // update your data\n// you are rendering your stuff through setState which updates your data\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateCurrentUser = event => {\n      {\n        /* inside of header, on change , when the name is selected, grab it with event.name and change state to it */\n      }\n      let userData = this.state.userData;\n      let currentUserTempArray = this.state.currentUser;\n      let selectedUser = event.target.value; // now we update state.currentUser with setState\n\n      userData.map(user => {\n        if (selectedUser === user.userName) {\n          currentUserTempArray.name = selectedUser;\n          currentUserTempArray.id = user.id;\n          currentUserTempArray.avatarUrl = user.avatarUrl;\n          this.setState({\n            currentUser: currentUserTempArray\n          });\n          console.log(this.state.currentUser);\n        }\n      });\n    };\n\n    this.handleFormSubmit = event => {\n      // if the currentuser is 1 then push everything related to it in its own array\n      // else currentuser is 2 then push all posts to user2statearray\n      // then empty the box\n      let everyUserPosts = this.state.everyUserPosts;\n      let formValue = this.state.formValue;\n      let currentUser = this.state.currentUser; // prevent the page reload\n\n      console.log('form submit function called');\n      event.preventDefault(); // take the state array and store the formtextcontnet inside of it.\n\n      {\n        if (currentUser.name === 'jawad') {\n          everyUserPosts.push({\n            \"formValue\": formValue,\n            \"id\": 1,\n            \"belongsTo\": 'jawad',\n            \"likesAmount\": 0,\n            \"createdOrder\": this.state.createdOrder,\n            \"commentsAmount\": 0,\n            \"userImage\": 'https://lh6.googleusercontent.com/proxy/U4Xg7pjLdOi-k39llZrQl4Rry7JDFN3Z1lwuUkXAh_SNbJXwnutlgqGb2jr9nSMttrJKYz-02nG-fQmXW8KB1rwbiA'\n          });\n          console.log(everyUserPosts);\n        } else {\n          everyUserPosts.push({\n            \"formValue\": formValue,\n            \"id\": 2,\n            \"belongsTo\": 'Skywalker',\n            \"likesAmount\": 0,\n            \"createdOrder\": this.state.createdOrder,\n            \"commentsAmount\": 0,\n            \"userImage\": 'https://pdpcom.scdn1.secure.raxcdn.com/media/catalog/product/cache/1/image/85e4522595efc69f496374d01ef2bf13/f/r/front_20-_20on_1_1.png'\n          });\n          console.log('everyUserPosts');\n          console.log(everyUserPosts);\n        }\n      } // empty the form input box\n\n      this.setState({\n        formValue: ''\n      }); // when clicking on the button, find the post order in the state array with the button's id and increment the likeAmount\n\n      this.setState({\n        createdOrder: this.state.createdOrder++\n      });\n    };\n\n    this.createPost = () => {\n      let everyUserPosts = this.state.everyUserPosts;\n      let currentUser = this.state.currentUser;\n\n      if (currentUser.name === 'everyone') {\n        return everyUserPosts.map(postObject => {\n          console.log('inside of createpost test everyone ' + postObject.belongsTo); // call a function that updates the createdorder state\n\n          return React.createElement(Post, {\n            currentUser: postObject,\n            formContent: postObject.formValue,\n            userImage: postObject.userImage,\n            likesAmount: postObject.likesAmount,\n            commentsAmount: postObject.commentsAmount,\n            incrementLikes: this.incrementLikes,\n            trackingNumber: this.state.createdOrder,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 130\n            },\n            __self: this\n          });\n        });\n      }\n\n      if (currentUser.name === 'jawad') {\n        return everyUserPosts.map(postObject => {\n          if (postObject.id === 1) {\n            return React.createElement(Post, {\n              currentUser: postObject,\n              formContent: postObject.formValue,\n              userImage: postObject.userImage,\n              likesAmount: postObject.likesAmount,\n              commentsAmount: postObject.commentsAmount,\n              incrementLikes: this.incrementLikes,\n              trackingNumber: this.state.createdOrder,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 145\n              },\n              __self: this\n            });\n          }\n        });\n      } else {\n        return everyUserPosts.map(postObject => {\n          if (postObject.id === 2) {\n            return React.createElement(Post, {\n              currentUser: postObject,\n              formContent: postObject.formValue,\n              userImage: postObject.userImage,\n              likesAmount: postObject.likesAmount,\n              commentsAmount: postObject.commentsAmount,\n              incrementLikes: this.incrementLikes,\n              trackingNumber: this.state.createdOrder,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 159\n              },\n              __self: this\n            });\n          }\n        });\n      }\n    };\n\n    this.incrementLikes = event => {\n      // you duplicate the state array, \n      // update the duplicated array\n      // set state the state array to the duplicate array\n      console.log('this function is supposed to increment likes');\n      console.log(event.target.id);\n      let tempArray = this.state.everyUserPosts;\n      tempArray.forEach((post, index) => {\n        if (index === parseInt(event.target.id)) {\n          post.likesAmount++;\n        } else {\n          console.log('they do not match ' + index + event.target.id);\n        } //post.likesAmount++;\n\n      });\n      this.setState({\n        everyUserPosts: tempArray\n      });\n      console.log(this.state.everyUserPosts);\n    };\n\n    this.updateStoredText = event => {\n      let currentInputBoxText = event.target.value;\n      this.setState({\n        formValue: currentInputBoxText\n      });\n    };\n\n    this.state = {\n      currentUser: {\n        name: '',\n        id: 5,\n        avatarUrl: ''\n      },\n      userData: [{\n        userName: 'everyone',\n        id: 5,\n        avatarUrl: ''\n      }, {\n        userName: 'jawad',\n        id: 0,\n        avatarUrl: 'https://lh6.googleusercontent.com/proxy/U4Xg7pjLdOi-k39llZrQl4Rry7JDFN3Z1lwuUkXAh_SNbJXwnutlgqGb2jr9nSMttrJKYz-02nG-fQmXW8KB1rwbiA'\n      }, {\n        userName: 'Skywalker',\n        id: 1,\n        avatarUrl: 'https://pdpcom.scdn1.secure.raxcdn.com/media/catalog/product/cache/1/image/85e4522595efc69f496374d01ef2bf13/f/r/front_20-_20on_1_1.png'\n      }],\n      everyUserPosts: [],\n      formValue: '',\n      createdOrder: 0\n    };\n  } // Header================================\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"main-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(Header, {\n      currentUser: this.state.currentUser,\n      userData: this.state.userData,\n      onChange: this.updateCurrentUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }), React.createElement(StatusForm, {\n      currentUser: this.state.currentUser,\n      handleFormSubmit: this.handleFormSubmit,\n      updateStoredText: this.updateStoredText,\n      formValue: this.state.formValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }), this.createPost());\n  } //render\n\n\n} //class\n\n\nlet Header = props => {\n  let alluserData = props.userData;\n  return React.createElement(\"div\", {\n    className: \"header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }, \"Social News Feed\"), React.createElement(\"select\", {\n    className: \"user-select-list\",\n    onChange: props.onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }, alluserData.map(user => {\n    return React.createElement(\"option\", {\n      value: user.userName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, user.userName);\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/rjh28/Desktop/school/sd260/final-assignment/final-project/src/App.js"],"names":["React","Component","StatusForm","Post","App","constructor","props","updateCurrentUser","event","userData","state","currentUserTempArray","currentUser","selectedUser","target","value","map","user","userName","name","id","avatarUrl","setState","console","log","handleFormSubmit","everyUserPosts","formValue","preventDefault","push","createdOrder","createPost","postObject","belongsTo","userImage","likesAmount","commentsAmount","incrementLikes","tempArray","forEach","post","index","parseInt","updateStoredText","currentInputBoxText","render","Header","alluserData","onChange"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n//import Header from './Header';\nimport StatusForm from './StatusForm';\n//import Timeline from './Timeline';\nimport Post from './Post';\n\n// import Comment from './Comment';\nimport './App.css';\n\n// update your data\n// you are rendering your stuff through setState which updates your data\n\nclass App extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      currentUser: {\n        name: '',\n        id: 5,\n        avatarUrl: ''\n      },\n\n      userData: [\n        {\n          userName: 'everyone',\n          id: 5,\n          avatarUrl: ''\n        },\n        {\n          userName: 'jawad',\n          id: 0,\n          avatarUrl: 'https://lh6.googleusercontent.com/proxy/U4Xg7pjLdOi-k39llZrQl4Rry7JDFN3Z1lwuUkXAh_SNbJXwnutlgqGb2jr9nSMttrJKYz-02nG-fQmXW8KB1rwbiA'\n        },\n        {\n          userName: 'Skywalker',\n          id: 1,\n          avatarUrl: 'https://pdpcom.scdn1.secure.raxcdn.com/media/catalog/product/cache/1/image/85e4522595efc69f496374d01ef2bf13/f/r/front_20-_20on_1_1.png'\n        }\n      ],\n\n      everyUserPosts: [],\n\n      formValue: '',\n\n      createdOrder: 0\n    }\n  }\n\n  // Header================================\n\n  updateCurrentUser = (event) => {\n    {/* inside of header, on change , when the name is selected, grab it with event.name and change state to it */}\n    let userData = this.state.userData;\n    let currentUserTempArray = this.state.currentUser;\n    let selectedUser = event.target.value;\n\n    // now we update state.currentUser with setState\n    userData.map( user => {\n      if (selectedUser === user.userName) {\n        currentUserTempArray.name = selectedUser;\n        currentUserTempArray.id = user.id;\n        currentUserTempArray.avatarUrl = user.avatarUrl;\n\n        this.setState ({ currentUser : currentUserTempArray });\n        console.log(this.state.currentUser);\n      }\n    })\n  }\n\n  // StatusForm=================================\n\n  handleFormSubmit = (event) => {\n    // if the currentuser is 1 then push everything related to it in its own array\n    // else currentuser is 2 then push all posts to user2statearray\n    // then empty the box\n    let everyUserPosts = this.state.everyUserPosts;\n   \n    let formValue = this.state.formValue;\n    let currentUser = this.state.currentUser;\n\n    // prevent the page reload\n    console.log('form submit function called');\n    event.preventDefault();\n\n    // take the state array and store the formtextcontnet inside of it.\n    {if (currentUser.name === 'jawad') {\n      everyUserPosts.push({\n        \"formValue\" : formValue,\n        \"id\" : 1,\n        \"belongsTo\": 'jawad',\n        \"likesAmount\" : 0,\n        \"createdOrder\" : this.state.createdOrder, \n        \"commentsAmount\" : 0,\n        \"userImage\": 'https://lh6.googleusercontent.com/proxy/U4Xg7pjLdOi-k39llZrQl4Rry7JDFN3Z1lwuUkXAh_SNbJXwnutlgqGb2jr9nSMttrJKYz-02nG-fQmXW8KB1rwbiA' });\n      \n      console.log(everyUserPosts);\n    } else {\n      everyUserPosts.push({ \n        \"formValue\" : formValue, \n        \"id\" : 2, \n        \"belongsTo\": 'Skywalker', \n        \"likesAmount\" : 0,\n        \"createdOrder\" : this.state.createdOrder, \n        \"commentsAmount\" : 0, \n        \"userImage\" : 'https://pdpcom.scdn1.secure.raxcdn.com/media/catalog/product/cache/1/image/85e4522595efc69f496374d01ef2bf13/f/r/front_20-_20on_1_1.png' });\n\n      console.log('everyUserPosts');\n      console.log(everyUserPosts);\n    }}\n\n    // empty the form input box\n    this.setState({ formValue : '' });\n    \n    // when clicking on the button, find the post order in the state array with the button's id and increment the likeAmount\n    this.setState({ createdOrder: this.state.createdOrder++});\n\n  }// handleFormSubmit()\n\n  //call it renderPost\n  createPost = () => {\n    let everyUserPosts = this.state.everyUserPosts;\n    let currentUser = this.state.currentUser;\n    \n\n    if(currentUser.name === 'everyone') {\n      \n      return everyUserPosts.map(postObject => { \n        console.log('inside of createpost test everyone ' + postObject.belongsTo);\n        // call a function that updates the createdorder state\n        return <Post \n          currentUser={postObject} \n          formContent={postObject.formValue} \n          userImage={postObject.userImage}\n          likesAmount={postObject.likesAmount}\n          commentsAmount={postObject.commentsAmount}\n          incrementLikes={this.incrementLikes} \n          trackingNumber={this.state.createdOrder}/>\n          \n        })\n    }\n\n    if(currentUser.name === 'jawad') {\n      return (everyUserPosts.map(postObject => {\n        if(postObject.id === 1) {\n          return <Post \n          currentUser={postObject} \n          formContent={postObject.formValue} \n          userImage={postObject.userImage}\n          likesAmount={postObject.likesAmount}\n          commentsAmount={postObject.commentsAmount}\n          incrementLikes={this.incrementLikes}\n          trackingNumber={this.state.createdOrder} />\n\n        }\n      }))\n    } else {\n      return (everyUserPosts.map(postObject => {\n        if(postObject.id === 2) {\n          return <Post \n          currentUser={postObject} \n          formContent={postObject.formValue} \n          userImage={postObject.userImage}\n          likesAmount={postObject.likesAmount}\n          commentsAmount={postObject.commentsAmount}\n          incrementLikes={this.incrementLikes}\n          trackingNumber={this.state.createdOrder} />\n        }  \n      }))\n    }\n  }\n\n  //Posts================================================\n  \n  incrementLikes = (event) => {\n\n    // you duplicate the state array, \n    // update the duplicated array\n    // set state the state array to the duplicate array\n    console.log('this function is supposed to increment likes');\n    console.log(event.target.id);\n    \n    let tempArray = this.state.everyUserPosts;\n\n    tempArray.forEach( (post, index) => {\n      if (index === parseInt(event.target.id)) {\n        post.likesAmount++;\n      } else {\n        console.log('they do not match ' + index + event.target.id);\n      }\n      //post.likesAmount++;\n    })\n\n    this.setState({everyUserPosts: tempArray});\n    console.log(this.state.everyUserPosts)\n  }\n\n  updateStoredText = (event) => {\n    let currentInputBoxText = event.target.value;\n    this.setState({ formValue : currentInputBoxText});\n  }\n\n  render() {\n    return (\n      <div className='main-container'>\n        <Header \n        currentUser={this.state.currentUser} \n        userData={this.state.userData} \n        onChange={this.updateCurrentUser}/>\n\n        <StatusForm \n        currentUser={this.state.currentUser} \n        handleFormSubmit={this.handleFormSubmit} \n        updateStoredText={this.updateStoredText} \n        formValue={this.state.formValue} />\n\n        {this.createPost()}\n      </div>  \n    )\n  }//render\n\n}//class\n\nlet Header = (props) => {\n  let alluserData = props.userData;\n  return (\n    <div className='header'>\n      <h2>Social News Feed</h2>\n      <select \n      className='user-select-list' \n      onChange={props.onChange}\n      >\n      {\n      alluserData.map(user => { \n        return <option value={user.userName}>{user.userName}</option> \n      })\n      }\n      </select>\n    </div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}