{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rjh28\\\\Desktop\\\\school\\\\sd260\\\\final-assignment\\\\final-project\\\\src\\\\App.js\";\nimport React, { Component } from 'react'; //import Header from './Header';\n\nimport StatusForm from './StatusForm';\nimport Timeline from './Timeline';\nimport Post from './Post'; // import Comment from './Comment';\n\nimport './App.css'; // current functionality objectives\n// link my current user to my post\n// be able to post an item according to each user\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateCurrentUser = event => {\n      {\n        /* inside of header, on change , when the name is selected, grab it with event.name and change state to it */\n      }\n      console.log('value of this.state.currentUser before this.setState' + this.state.currentUser);\n      let selectedUser = event.target.value;\n      console.log('the select tag has updated, called props.onChange which called updateCurrentUser');\n      this.setState({\n        currentUser: selectedUser\n      });\n      console.log('value of this.state.currentUser after this.setState ' + this.state.currentUser);\n    };\n\n    this.handleFormSubmit = event => {\n      console.log('form submit function called');\n      event.preventDefault();\n      this.state.userPosts.push(formValue);\n    };\n\n    this.updateState = event => {\n      // update the state\n      // push the texcontent inside of a state array that is meant to store all posts\n      // and clear the input box\n      // map through the array\n      // create a new post for each array element\n      this.setState({\n        formValue: event.target.value\n      });\n      this.state.userPosts.push(this.state.formValue);\n      console.log(this.state.userPosts); // this.setState({ formValue: ''});\n    };\n\n    this.state = {\n      currentUser: 'Jawad',\n      users: ['jawad', 'Skywalker'],\n      userPosts: [],\n      formValue: ''\n    };\n  } // Header================================\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"main-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Header, {\n      currentUser: this.state.currentUser,\n      users: this.state.users,\n      onChange: this.updateCurrentUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(StatusForm, {\n      currentUser: this.state.currentUser,\n      handleFormSubmit: this.handleFormSubmit,\n      updateState: this.updateState,\n      formValue: this.state.formValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(Timeline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }));\n  }\n\n}\n\nlet Header = props => {\n  let allUsers = props.users;\n  return React.createElement(\"div\", {\n    className: \"header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Social News Feed\"), React.createElement(\"select\", {\n    className: \"user-select-list\",\n    onChange: props.onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, allUsers.map(user => {\n    return React.createElement(\"option\", {\n      value: user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, user);\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/rjh28/Desktop/school/sd260/final-assignment/final-project/src/App.js"],"names":["React","Component","StatusForm","Timeline","Post","App","constructor","props","updateCurrentUser","event","console","log","state","currentUser","selectedUser","target","value","setState","handleFormSubmit","preventDefault","userPosts","push","formValue","updateState","users","render","Header","allUsers","onChange","map","user"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n//import Header from './Header';\nimport StatusForm from './StatusForm';\nimport Timeline from './Timeline';\nimport Post from './Post';\n\n// import Comment from './Comment';\nimport './App.css';\n\n// current functionality objectives\n// link my current user to my post\n// be able to post an item according to each user\n\nclass App extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      currentUser: 'Jawad',\n      users: ['jawad', 'Skywalker'],\n\n      userPosts: [],\n      formValue: ''\n    }\n  }\n\n  // Header================================\n\n  updateCurrentUser = (event) => {\n    {/* inside of header, on change , when the name is selected, grab it with event.name and change state to it */}\n    console.log('value of this.state.currentUser before this.setState' + this.state.currentUser);\n    let selectedUser = event.target.value;\n    console.log('the select tag has updated, called props.onChange which called updateCurrentUser')\n    this.setState({ currentUser : selectedUser});\n    console.log('value of this.state.currentUser after this.setState ' + this.state.currentUser);\n  }\n\n  // StatusForm\n\n  handleFormSubmit = (event) => {\n    console.log('form submit function called');\n    event.preventDefault();\n    this.state.userPosts.push(formValue);\n  }\n\n  updateState = (event) => {\n    // update the state\n    // push the texcontent inside of a state array that is meant to store all posts\n    // and clear the input box\n    // map through the array\n    // create a new post for each array element\n    \n    this.setState({ formValue : event.target.value});\n    this.state.userPosts.push(this.state.formValue);\n    console.log(this.state.userPosts);\n    // this.setState({ formValue: ''});\n  }\n\n  render() {\n    return (\n      <div className='main-container'>\n        <Header currentUser={this.state.currentUser} users={this.state.users} onChange={this.updateCurrentUser}/>\n        <StatusForm currentUser={this.state.currentUser} handleFormSubmit={this.handleFormSubmit} updateState={this.updateState} formValue={this.state.formValue} />\n        <Timeline />\n      </div>  \n    )\n  }\n}\n\nlet Header = (props) => {\n  let allUsers = props.users;\n\n  return (\n    <div className='header'>\n      <h2>Social News Feed</h2>\n      <select className='user-select-list' onChange={props.onChange}>\n        {allUsers.map(user => { return <option value={user}>{user}</option> })}\n      </select>\n    </div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}